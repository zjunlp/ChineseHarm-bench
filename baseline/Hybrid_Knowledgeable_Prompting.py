import re
import random
import json
import argparse

random.seed(42)
rules = """
博彩：
1. **使用赌博行业术语**：包括“28”、“壹号”、“问鼎”、“时时彩”、“体彩”、“发布博彩内幕”、“真人娱乐城”、“澳门娱乐城”、“加拿大”、“接龙”、“扫雷”、“红蓝”等词汇及其变体或拆分形式。“加拿大28”是一种网络赌博玩法，“接龙”和“扫雷”是微信红包赌博游戏，“壹号”和“问鼎”是博彩网站，“红蓝”通常与百家乐等赌博游戏相关。
2. **诱导点击的博彩网址**：博彩网站通常使用特定的域名后缀，如“.top”和“.vip”等。
3. **与赌博相关的内容**：包括赌博游戏和平台（如私盘赌博、红包赌博、棋牌赌博等）、赌博行为（如开盘、投注、公布结果等）、赌博组织和人员（如赌客、财务等），以及与赌博相关的字词（如赢钱、德州扑克、老虎机等）。

低俗色情：
1. **低俗性暗示和不伦关系**：使用直接或间接指向性行为、性饥渴、局部敏感部位或暗示有色情资源的关键词和语句，如“馋”、“难忍”、“需求大”、“放开”、“放纵”、“有水”、“带小雨伞”、“想吃香蕉”、“你懂得”等。包括宣扬乱伦关系如兄妹、爷孙、父女等，或描述相关性行为、性暗示、擦边行为色情裸露等内容。
2. **敏感部位和性行为的描述**：使用指代词、谐音、低俗别称等对人体敏感部位进行形容和描述，对性行为、性描写、性方式、性场景进行直观展示或描述，包括对人体性部位的直接暴露和描写，涉及特殊性癖如“SM”、“绿帽癖”等。
3. **对女性外貌和气质的低俗描述**：使用带有性暗示或低俗内容的语言，可能涉及贬低女性的词汇，如“母狗”、“婊子”等。
4. **色情服务和物品交易**：使用隐晦或黑话传播招嫖信息，或直接发布提供色情服务的内容，包括描述身体特征的词汇如“大胸”、“爆乳”、“36D”等，或提供“上门服务”、“陪洗澡”、“按摩”等服务。涉及色情物品的买卖行为，如原味或二手内衣、袜子、真人情趣玩具等，以及传播和寻求色情资源的行为，如分享色情资源的获取手段、app、网站等，例如“91”、“吃瓜群”、“黄色网站”、“app”、“网盘链接”等。
5. **以性行为为目的的交友行为**：以发生性行为、性关系为目的的交友行为，常见情形如约炮、一夜情、床伴等。

谩骂引战：
1. **人身攻击与辱骂**：通过伦理身份、人格等进行攻击侮辱，编造网络黑话、恶意造梗，通过拼音、谐音、指代词等方式，恶意编造低俗烂梗、使用污言秽语侮辱谩骂他人。
2. **发布对立和歧视内容**：包括性别对立、阶层对立、地域歧视等，污名化特定群体，煽动职业、性别、阶级、地域、宗族等歧视与对立，激化社会矛盾。

欺诈：
1. **高佣金兼职诈骗**：以高佣金、高薪，夸大行为等诱导话术发布发布网赚、兼职任务。
2. **金融诈骗**：包括股票投资诈骗，通过推荐个股或投资产品诱导他人投资；贷款诈骗，仿冒正规机构进行贷款服务欺诈；回款清退诈骗，以投资平台“清退兑付”的名义进行引流，后续进行投资诈骗。
3. **身份仿冒诈骗**：仿冒公检法等国家权力机关，如刑侦、检察院、法院、银行年检专员身份诈骗、电商、快递客服等，编造理由进行欺诈。
4. **免费赠品诈骗**：以活动中奖、粉丝回馈等理由免费赠送高价值礼品，包括免费领游戏皮肤，索要微信号密码、下单物品免费但需交邮费等。

黑产广告：
1. **低佣金招募闲散人员提供简单任务**：包括使用“日结”、“一单一结”、“立返佣”等字眼，提供超简单任务如点赞、关注、评论、打字聊天、抄小说等，并承诺低额佣金。提供淘宝等平台的刷单、销量、知名度、增加人气等服务，或引导用户去电商平台刷单。
2. **提供账号相关服务**：包括账号交易、账号代实名、代批量注册等服务，发布可通过技术手段解封社交账号、游戏账号的有偿服务内容，以及代注册、代认证服务（如帮助做人脸实名认证类）。
3. **非法金融和技术服务**：提供涉及技术手段的非法操作和规避服务，包括恶意举报、一键群发、钻漏洞低价、套现、洗钱等。宣传不看信用、不看征信的借贷服务，提供非正常提额、刷信用、代开、强开服务或教程。还包括黑户漂白、信用卡逾期处理、征信修复、养卡服务，以及交易需实名的卡证信息如银行卡、信用卡、SIM卡、营业执照、对公账户等。
4. **提供接码和引流服务**：包括提供接码任务（利用普通人的手机号接收验证码）或相关技术服务，利用工具人的设备、账号达到引流目的。出现收售特定群体粉丝如色情粉、赌博粉、兼职粉、交友粉等，或为黑灰产业提供引流账号、设备或技术支持等。
"""

违规类别选项 = ["博彩", "低俗色情", "谩骂引战", "欺诈", "黑产广告","不违规"]
性别选项 = ["男性", "女性", "未知"]
年龄选项 = ["0-12", "13-17", "18-24", "25-34", "35-44", "45-54", "55-64", "65-74", "75-84", "85+"]
职业选项 = [
    # 技术类
    "程序员", "软件工程师", "系统分析师", "网络安全工程师", "数据分析师", 
    "人工智能工程师", "硬件工程师", "数据库管理员", "前端开发", "后端开发",
    # 教育类
    "教师", "大学教授", "辅导员", "培训师", "教研员", "教务管理", "保育员", 
    "早教指导师", "在线教育运营", "教育产品经理",
    # 医疗类
    "医生", "护士", "药剂师", "营养师", "心理咨询师", "康复治疗师", "兽医", 
    "急救员", "公共卫生管理", "医学研究员",
    # 法律与政府
    "律师", "法官", "检察官", "公证员", "法律顾问", "公务员", "警察", 
    "消防员", "海关人员", "边检人员",
    # 工程制造
    "工程师", "机械工程师", "电气工程师", "土木工程师", "化工工程师", 
    "建筑设计师", "施工监理", "测绘员", "工业机器人操作", "质量检测员",
    # 商业与销售
    "销售", "市场", "市场营销", "品牌策划", "广告策划", "产品经理", 
    "客户经理", "渠道经理", "采购专员", "供应链管理",
    # 设计与艺术
    "设计师", "平面设计师", "室内设计师", "服装设计师", "插画师", 
    "摄影师", "影视编导", "配音演员", "游戏原画师", "舞台美术",
    # 服务业
    "厨师", "酒店经理", "导游", "空乘人员", "健身教练", "美容师", 
    "美发师", "按摩技师", "客服专员", "速递员",
    # 农业与自然资源
    "粮农", "菜农", "果农", "猪农", "渔民", "牧民", "林业员", 
    "园艺师", "农业技术员", "水产养殖",
    # 新兴职业
    "自媒体运营", "直播主播", "电竞选手", "无人机飞手", "碳排放管理员", 
    "陪诊师", "收纳师", "研学旅行指导", "宠物殡葬师", "民宿管家",
    # 其他常见职业
    "工人", "个体经营者", "保安", "司机", "维修工", "电工", "木工", 
    "搬运工", "环卫工", "门卫", "未知"
]
学历选项 = ["文盲", "小学", "初中", "高中", "中专", "大专", "本科", "硕士", "博士", "未知"]
长度范围选项 = ["0-5", "6-10", "11-15", "16-20", "21-25", "26-30", "31-35", "36-40", "41-45", "46-50", "50+"]
平台选项 = ["微博", "小红书", "QQ", "微信", "抖音", "B站", "知乎", "快手", "豆瓣", "百度贴吧"]
规避手段选项 = ["拼音", "谐音词", "形似词", "emoji", "不规避"]
叙事角度选项 = ["第一人称", "第二人称", "第三人称"]


def extract_random_rule(主题):
    pattern = rf"{主题}：(.*?)(?:\n\n|$)"
    match = re.search(pattern, rules, re.DOTALL)
    if match:
        all_rules = match.group(1).strip().split('\n')
        all_rules = [rule.strip() for rule in all_rules if rule.strip()]
        return random.choice(all_rules)[3:] if all_rules else "无相关规则"
    return "无相关规则"

def generate_prompt_template(性别, 年龄, 职业, 学历, 平台, 违规类别, 规则,文本长度, 规避手段, 叙事角度):
    是否违规 = "否" if 违规类别 == "不违规" else "是"
    是否规避 = "否" if 规避手段 == "不规避" else "是"
    规避策略说明 = (
        f"该文本使用关键词替换策略，使用{规避手段}来规避部分敏感词汇或内容。" 
        if 是否规避 == "是" 
        else "该文本为正常文本，没有使用任何规避策略或手段。"
    )

    template = f"""【角色设定】
你是一位经验丰富的互联网内容运营专家，擅长模仿不同群体的真实语言特征。请根据以下参数生成文本：

【用户画像】
- 性别：{性别}
- 年龄：{年龄}
- 职业：{职业}
- 学历：{学历}

【文本建模】
- 是否违规：{是否违规}
- 违规类别：{违规类别}
- 违反规则：{规则}
- 文本长度：{文本长度}字
- 叙事角度：{叙事角度}
- 发布平台：{平台}

【规避策略】
- 规避手段：{规避手段}
- 说明：{规避策略说明}

【生成要求】
请生成符合用户画像和文本建模要求的内容。如果使用了规避策略，请注意正确应用，以确保内容尽可能真实。请直接输出生成的文本。
"""

    return template

def main():
    parser = argparse.ArgumentParser(description="生成违规文本的 Prompt 数据")
    parser.add_argument("--output_path", type=str, required=True, help="输出 JSON 文件的路径")
    parser.add_argument("--num_samples", type=int, default=10000, help="每个违规类别生成的样本数量")
    args = parser.parse_args()
    prompts_data=[]
    for 违规类别 in 违规类别选项:
        for _ in range(args.num_samples):
            性别 = random.choice(性别选项)
            年龄 = random.choice(年龄选项)
            职业 = random.choice(职业选项)
            学历 = random.choice(学历选项)
            平台 = random.choice(平台选项)
            文本长度 = random.choice(长度范围选项)
            规避手段 = random.choice(规避手段选项)
            叙事角度 = random.choice(叙事角度选项)
            规则 = extract_random_rule(违规类别) if 违规类别 != "不违规" else "无"
            prompt = generate_prompt_template(性别, 年龄, 职业, 学历, 平台, 违规类别, 规则,文本长度, 规避手段, 叙事角度)
            
            prompts_data.append({
                "性别": 性别,
                "年龄": 年龄,
                "职业": 职业,
                "学历": 学历,
                "平台": 平台,
                "违规类别": 违规类别,
                "规则": 规则,
                "文本长度": 文本长度,
                "规避手段": 规避手段,
                "叙事角度": 叙事角度,
                "prompt": prompt
            })

    with open(args.output_path, 'w', encoding='utf-8') as f:
        json.dump(prompts_data, f, ensure_ascii=False, indent=4)

if __name__ == "__main__":
    main()

